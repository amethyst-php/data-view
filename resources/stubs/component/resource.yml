label: {{ name }}
icon: /assets/amethyst/{{ name }}-icon.svg
options:
  data: {{ name }}
  api: {{ api }}
  components:
{% for attribute in attributes %}
  
    {{ attribute.name }}:
      name: {{ attribute.name }}
      type: attribute
      options:
        size: 12
        
        {% if attribute.type == 'BelongsTo' %}

        {{ attribute.options.data }}:
          query: 
            template: concat({{ attribute.instance.getRelationManager().getPrimaryAttributeNames().implode('," ",') | raw}}) ct "{{ '{{ __key__ }}' }}"
          readable: 
            type: default
            template: {{ '"{{' }} {{ attribute.instance.getRelationManager().getPrimaryAttributeNames().implode(' \}\} - \{\{ ') }} {{ '}}"' }}
          actions:
            update: {{ attribute.options.data }}-resource-create-or-update


        {% endif %}

        {% if attribute.type == 'MorphTo' %}{% for relationType in attribute.options.relationTypes %}

        {{ relationType }}:
          query: 
            template: concat({{ attribute.instance.getRelationManagerByKey(relationType).getPrimaryAttributeNames().implode('," ",') | raw}}) ct "{{ '{{ __key__ }}' }}"
          readable: 
            type: default
            template: {{ '"{{' }} {{ attribute.instance.getRelationManagerByKey(relationType).getPrimaryAttributeNames().implode(' \}\} - \{\{ ') }} {{ '}}"' }}
          actions:
            update: {{ relationType }}-resource-create-or-update

        {% endfor %}{% endif %}
{% endfor %}
{% for relation in relations %}{% if relation.type == 'MorphToMany' or relation.type == 'BelongsToMany' %}
  
    {{ relation.name }}:
      name: {{ relation.name }}
      type: relation
      options:
        size: 12
        query: 
          template: concat({{ relation.manager.getPrimaryAttributeNames().implode('," ",') | raw}}) ct "{{ '{{ __key__ }}' }}"
        readable: 
          type: default
          template: {{ '"{{' }} {{ relation.manager.getPrimaryAttributeNames().implode(' \}\} - \{\{ ') }} {{ '}}"' }}

{% endif %}{% endfor %}